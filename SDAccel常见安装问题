#前期准备
    首先要确定使用哪个加速卡，KCU1500和VCU1525一般用SDAccel2018.2以下版本，U200和U250需要SDAccel2018.2 XDF Edition以上版本，具体情况见Xilinx官网。
SDAccel2018.2需要在ubuntu2016.04.3中使用，不支持ubuntu2018.04,这点切记，SDAccel2018.3支持ubuntu2018.04,这点很容易混淆。SDAccel的兼容性较差，板卡
和系统一定要一一对应，要有Xilinx官网文档的说明，有些说的不明确，多看几个文档，要有文档文字支撑，不要想当然，不然会有很多问题，一个接着一个，走很多弯路，
前车之鉴，一定要重视。
#安装ubuntu16.04.3系统，配置环境变量
    之前没找到SDAccel2018.2的安装说明，找到SDAccel2018.3的安装说明，原以为旧的被新的覆盖了，其实在下载版本的界面直接打开，就是对应的安装说明。
SDAccel2018.2要安装的库很多，需要一个个安装（建议用这个方法）。SDAccel2018.3只需要安装一个`sudo apt install ocl-icd-devel`这个是错误的，正确安装是
`sudo apt-get update`和`sudo apt-get install ocl-icd-dev`。我安装SDAccel2018.2时，是这样解决的，但建议用前面一种方法，虽然麻烦但可靠。
#安装SDAccel2018.2
    安装过程和Windows下安装Vivado差不多，这过程没有问题，然后下载模板，跑例程，在软件仿真、硬件仿真和系统仿真都有错误，如下：
##软件仿真
    在下载模板时，很多时候下载失败，可以根据网址，自己下载，然后放到对应的目录下，更新一下就出来。这个有一个坑，网站上默认是最新版本对应的模板，这个是
不兼容的，需要下载对应版本的模板。**切记！**
##硬件仿真
    正常情况下，会报错，缺少文件，需要在`opt/Xilinx/SDx/2018.2/settings64.sh`中添加`export CPATH=/usr/include/x86_64-linux-gnu`，关闭，重新
`source settings64.sh`，然后再打开SDAccel2018.2，执行硬件仿真。
##系统仿真
    这个仿真的时间比较长，约1小时18分支，`build`没有报错，`run`会报`xcl2`错误，不要担心，是因为未安装板卡。
#用Vivado检查硬件
    在检查硬件之前，需要安装JTAG驱动，如下
1.命令行切换到root目录：
`#sudo -s`
2.去vivado的安装目录下，我的是/xilinx/Vivado/2018.2/data/xicom/cable_drivers/lin64 找到文件夹install_script
3.将文件夹 install_script拷贝到/opt目录下
4.因为现在是root目录，所以cd到/xilinx/Vivado/2018.2/data/xicom/cable_drivers/lin64目录下，直接运行命令：
`#cp -r install_script /opt`
5.将目录切换到/opt/install_script/install_drivers/ 目录下，运行命令：
`#./install_drivers`
6.重新拔掉JTAG，然后在插上，就能找到板卡了。
#安装KCU1500板卡
1、在执行`$ xbinst --platform xilinx_vcu1525_dynamic_5_1 -d`时，会报错，找不到，需要打开SDAccel的安装路径找到 SDx/2018.2/bin 目录下，空白处右
键->点击在终端打开->输入`sudo ./xbinst --platform xilinx_vcu1525_dynamic_5_1 -d /opt/dsa/xilinx_vcu1525_dynamic_5_1`就可以了。
2、在执行`$ sudo ./install.sh -f yes `时，也会报错，runtime未安装或更新，这个比较麻烦。
   2.1、首先要重启，将secure_boot设置为disable。
   2.2、下载timer.h文件添加到 /usr/include/linux/ 路径下。下载地址：`https://elixir.bootlin.com/linux/v4.15/source/include/linux/timer.h`
   2.3、更改qdma_mbox.c、xocl_drm.c、xocl_bo.c三个文件。
        2.3.1、在`/opt/dsa/xilinx_paltform_5_1/xbinst/runtime/platforms/xilinx_vcu1525_dynamic_5_1/driver`目录下，将xocl.zip解压，即在终端
打开后，输入命令：`sudo unzip xocl.zip`解压后是一个driver文件夹,进入路径：
`/opt/dsa/xilinx_vcu1525_dynamic_5_1/xbinst/runtime/platforms/xilinx_vcu1525_dynamic_5_1/driver/driver/xclng/drm/xocl/lib/`找到qdma_mbox.c
文件,空白处右键 `open in terminal`在终端输入命令：`sudo chmod a+w qdma_mbox.c`来更改权限;然后输入命令：`sudo gedit qdma_mbox.c`编辑文件，找到
499行的`init_timer(timer);``timer->data = (unsigned long)xdev;`将这两行用`timer_setup(timer, timer->function, 0);`替换。215行的
`static void qdma_mbox_proc(unsigned long arg)`用`static void qdma_mbox_proc(struct timer_list *arg /* unsigned long arg */)`替换，324行的
`static void qdma_mbox_proc(unsigned long arg`用`static void qdma_mbox_proc(struct timer_list *arg /* unsigned long arg */)`替换，然后保存。
将原来的压缩包xocl.zip删除，命令：`sudo rm -rf xocl.zip`然后，将新更改的driver压缩为xocl.zip,命令：`sudo zip -r xocl.zip ./driver`。

